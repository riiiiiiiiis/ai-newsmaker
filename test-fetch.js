// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å GitHub
import 'dotenv/config';

const GITHUB_RAW_URL = process.env.GITHUB_RAW_URL || 'https://raw.githubusercontent.com/liyedanpdx/reddit-ai-trends/main/reports/latest_report_en.md';

console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö —Å GitHub...');
console.log('üìé URL:', GITHUB_RAW_URL);

try {
  const response = await fetch(GITHUB_RAW_URL);
  
  if (!response.ok) {
    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
  }
  
  const content = await response.text();
  
  console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!');
  console.log('üìä –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', content.length, '—Å–∏–º–≤–æ–ª–æ–≤');
  console.log('üî§ –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:');
  console.log('=' + '='.repeat(50));
  console.log(content.substring(0, 500) + (content.length > 500 ? '...' : ''));
  console.log('=' + '='.repeat(50));
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É markdown
  const lines = content.split('\n');
  const headerLines = lines.filter(line => line.startsWith('#'));
  
  console.log('üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:', headerLines.length);
  console.log('üìù –ó–∞–≥–æ–ª–æ–≤–∫–∏:');
  headerLines.slice(0, 5).forEach(header => {
    console.log('  ' + header.substring(0, 80));
  });
  
  if (headerLines.length > 5) {
    console.log(`  ... –∏ –µ—â—ë ${headerLines.length - 5} –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤`);
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error.message);
  process.exit(1);
}